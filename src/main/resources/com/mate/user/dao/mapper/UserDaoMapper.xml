<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mate.user.dao.UserDao">


    <resultMap type="com.mate.user.vo.UserVO"
	           id="userVOMap"
	           autoMapping="true">
	    <!-- UserVO 필드 매핑 -->
	    <id column="USR_LGN_ID" property="usrLgnId" />
	    <result column="USR_PWD" property="usrPwd" />
	    <result column="SALT" property="salt" />
	    <result column="LOGIN_FAIL_COUNT" property="loginFailCount" />
	    <result column="LATEST_LOGIN_FAIL_DATE" property="latestLoginFailDate" />
	    <result column="LATEST_LOGIN_IP" property="latestLoginIp" />
	    <result column="LATEST_LOGIN_SUCCESS_DATE" property="latestLoginSuccessDate" />
	    <result column="USR_ROLE" property="usrRole" />
	    <result column="USR_ID" property="usrId" />
	    <result column="USR_LNM" property="usrLnm" />
	    <result column="USR_FNM" property="usrFnm" />
	    <result column="USR_GNDR" property="usrGndr" />
	    <result column="USR_EML" property="usrEml" />
	    <result column="USR_PHN" property="usrPhn" />
	    <result column="USR_BD" property="usrBd" />
	    <result column="USR_IS_GD" property="usrIsGd" />
	    <result column="USR_SLF_INTDCTN" property="usrSlfIntdctn" />
	    <result column="USR_PYP_EML" property="usrPypEml" />
	    <result column="USR_AVG_RTNG" property="usrAvgRtng" />
	    <result column="USR_JN_DT" property="usrJnDt" />
	    <result column="USR_CL_DT" property="usrClDt" />
	    <result column="USR_IS_CL" property="usrIsCl" />
	    <result column="USR_MDFY_DT" property="usrMdfyDt" />
	    <result column="GD_PRFL_IMG" property="gdPrflImg" />
	    <result column="GD_ID_IMG" property="gdIdImg" />
	    <result column="GD_CBC_IMG" property="gdCbcImg" />
	    <result column="GD_RP_CNT_ID" property="gdRpCntId" />
	    <result column="COUNTRY_NAME" property="countryName" />
	    <result column="USR_CNT_CODE" property="usrCntCode" />
	    <result column="AGE" property="age" />
	    <result column="ROLE" property="role" />
	    <result column="PROVIDER" property="provider" />
	
	    <!-- AuthorityVO 필드 매핑 -->
	    <collection property="authority"
	                ofType="com.mate.user.vo.AuthorityVO"
	                autoMapping="true">
	        <id column="AUTHORITY_NAME" property="authorityName" />
	        <id column="ROLE" property="roleName" />
	    </collection>
	    <collection property="licenseList"
	                ofType="com.mate.common.vo.LicenseVO"
	                autoMapping="true">
	       <id column="GD_LCN_ID" property="lcnId" />
	    </collection>
	</resultMap>

	<insert id="insertNewUser" parameterType="com.mate.user.vo.RegistUserVO">
		INSERT INTO USR_INF
		     ( USR_ID
		     , USR_LGN_ID
		     , USR_PWD 
		     , USR_LNM 
		     , USR_FNM 
		     , USR_GNDR 
		     , USR_EML 
		     , USR_PHN
		     , USR_CNT_CODE
		     , USR_BD
		     , SALT
		     , LOGIN_FAIL_COUNT
		     , GD_RP_CNT_ID
		     , USR_JN_DT
		     , USR_ROLE
		     , USR_IS_GD
		     , USR_IS_CL
		     , USR_IS_BLCK)
		VALUES
		     ( 'USR-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || LPAD(SEQ_USR_PK.NEXTVAL, 6, 0)
		     , #{usrLgnId}
		     , #{usrPwd}
		     , #{usrLnm}
		     , #{usrFnm}
		     , #{usrGndr}
		     , #{usrEml}
		     , #{usrPhn}
		     , #{usrCntCode}
		     , TO_DATE(#{usrBd}, 'YYYY-MM-DD')
		     , #{salt}
		     , 0
		     , #{gdRpCntId}
		     , SYSDATE
		     , 'ROLE_TOURIST'
		     , 'N'
		     , 'N'
		     , 'N'
		    )
	</insert>
	
	<select id="getIdCount" parameterType="String" resultType="_int">
		SELECT COUNT(1)
  		  FROM USR_INF
 		 WHERE USR_LGN_ID = #{_parameter}
	</select>
	
	<select id="getEmailCount" parameterType="String" resultType="_int">
		SELECT COUNT(1)
  		  FROM USR_INF
 		 WHERE USR_EML = #{_parameter}
	</select>
	
	<select id="getPaypalEmailCount" parameterType="String" resultType="_int">
		SELECT COUNT(1)
  		  FROM USR_INF
 		 WHERE USR_PYP_EML = #{_parameter}
	</select>
	
	<select id="getPhnCount" parameterType="String" resultType="_int">
		SELECT COUNT(1)
  		  FROM USR_INF
 		 WHERE USR_LGN_ID != #{usrLgnId}
 		   AND USR_PHN = #{usrPhn}
	</select>

    <select id="checkPhoneAvailability" parameterType="com.mate.user.vo.UserVO" resultType="int">
	    SELECT COUNT(1)
	    FROM USR_INF
	    WHERE USR_PHN = #{usrPhn}
	      AND USR_LGN_ID != #{usrLgnId}
	</select>

	
	<select id="selectSalt" parameterType="String" resultType="String">
		SELECT SALT
 		  FROM USR_INF
 		 WHERE USR_LGN_ID = #{usrLgnId}
	</select>
	
	<select id="selectOneMember" 
			parameterType="com.mate.user.vo.LoginUserVO" 
			resultType="com.mate.user.vo.UserVO">
		SELECT U.USR_ID
		     , U.USR_LGN_ID
		     , U.USR_PWD 
		     , U.SALT 
		     , U.LOGIN_FAIL_COUNT 
		     , TO_CHAR(U.LATEST_LOGIN_FAIL_DATE, 'YYYY-MM-DD HH24:MI:SS') AS LATEST_LOGIN_FAIL_DATE
		     , U.LATEST_LOGIN_IP 
		     , TO_CHAR(U.LATEST_LOGIN_SUCCESS_DATE, 'YYYY-MM-DD HH24:MI:SS') AS LATEST_LOGIN_SUCCESS_DATE
		     , U.USR_IS_CL
		     , U.USR_IS_GD
		     , C.COUNTRY_NAME
		     , U.USR_ROLE
		     , U.USR_IS_BLCK
		  FROM USR_INF U
		  LEFT JOIN COUNTRIES C
		    ON U.GD_RP_CNT_ID = C.COUNTRY_ID
		 WHERE U.USR_LGN_ID = #{usrLgnId}
		   AND U.USR_PWD = #{usrPwd}
		   AND U.USR_IS_CL = 'N'
		   AND U.USR_IS_BLCK = 'N'
	</select>
	
	<update id="updateLoginFailState" parameterType="com.mate.user.vo.LoginUserVO">
		UPDATE USR_INF
		   SET LOGIN_FAIL_COUNT = LOGIN_FAIL_COUNT + 1
		     , LATEST_LOGIN_FAIL_DATE = SYSDATE
		     , LATEST_LOGIN_IP = #{ip}
		 WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<select id="selectLoginRestrictionCount" parameterType="String" resultType="_int">
		SELECT COUNT(1)
		  FROM USR_INF
		 WHERE USR_LGN_ID = #{_parameter}
		   AND LOGIN_FAIL_COUNT >= 5
		   AND LATEST_LOGIN_FAIL_DATE BETWEEN SYSDATE -1/24 AND SYSDATE
	</select>
	
	<update id="upadateLoginSuccessState" parameterType="com.mate.user.vo.LoginUserVO">
		UPDATE USR_INF 
		   SET LOGIN_FAIL_COUNT = 0
		     , LATEST_LOGIN_FAIL_DATE = NULL 
		     , LATEST_LOGIN_IP = #{ip}
		     , LATEST_LOGIN_SUCCESS_DATE = SYSDATE
		 WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<update id="updateUserPhoneNumber" parameterType="com.mate.user.vo.UserVO">
		 UPDATE USR_INF
		    SET USR_PHN = #{usrPhn}
		  WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<update id="upadateUserPaypalEmail" parameterType="com.mate.user.vo.UserVO">
		UPDATE USR_INF
		    SET USR_PYP_EML = #{usrPypEml}
		  WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<update id="softDeleteOneUser" parameterType="String">
		UPDATE USR_INF 
		   SET USR_IS_CL = 'Y'
		     , USR_CL_DT = SYSDATE 
		 WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<update id="updateUserPassword" parameterType="com.mate.user.vo.UserVO">
		UPDATE USR_INF 
		   SET USR_PWD = #{usrPwd}
		     , SALT = #{salt} 
		 WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
	<update id="getSalt" parameterType="String">
		SELECT SALT
 		  FROM USR_INF
 		 WHERE USR_LGN_ID = #{usrLgnId}
	</update>
	
    <select id="findUserIdByEmail" parameterType="string" resultType="string">
       SELECT USR_LGN_ID
       FROM USR_INF
       WHERE USR_EML = #{usrEml}
    </select>
	
	<select id="selectAllCountries" resultType="com.mate.common.vo.CountriesVO">
		 SELECT COUNTRY_ID
		      , COUNTRY_NAME 
		   FROM COUNTRIES
	</select>
	
	<select id="getPasswordByUserId" parameterType="String" resultType="String">
		SELECT USR_PWD
		  FROM USR_INF
		 WHERE USR_LGN_ID = #{usrLgnId}
	</select>
	
	<select id="selectOneMemberByIdAndEmail" parameterType="com.mate.user.vo.UserVO" resultType="com.mate.user.vo.UserVO">
		SELECT *
		  FROM USR_INF
		 WHERE USR_LGN_ID = #{usrLgnId}
		   AND USR_EML = #{usrEml}
	</select>
	
	<select id="selectUserByLoginId" parameterType="String" resultMap="userVOMap">
	    SELECT U.USR_ID,
	           U.USR_LGN_ID,
	           U.USR_PWD,
	           U.SALT,
	           U.USR_ROLE,
	           U.USR_LNM,
	           U.USR_FNM,
	           U.USR_GNDR,
	           U.USR_EML,
	           U.USR_PHN,	
	           U.USR_BD,
	           U.USR_IS_GD,
	           U.USR_SLF_INTDCTN,
	           U.USR_PYP_EML,
	           U.USR_AVG_RTNG,
	           U.USR_JN_DT,
	           U.USR_CL_DT,
	           U.USR_IS_CL,
	           U.USR_IS_BLCK,
	           U.USR_MDFY_DT,
	           U.GD_PRFL_IMG,
	           U.GD_ID_IMG,
	           U.GD_CBC_IMG,
	           U.GD_RP_CNT_ID,
	           C.COUNTRY_NAME,
	           U.USR_CNT_CODE,
	      FROM USR_INF U
	      LEFT JOIN COUNTRIES C ON U.GD_RP_CNT_ID = C.COUNTRY_ID
	     WHERE U.USR_LGN_ID = #{usrLgnId}
	       AND U.USR_IS_BLCK = 'N'
	       AND U.USR_IS_CL = 'N'
	</select>
	
	<update id="mergeUser" parameterType="com.mate.user.vo.UserVO">
        MERGE INTO MEMBERS M
        USING (SELECT 1 FROM DUAL ) D
           ON (M.EMAIL = #{email})
         WHEN MATCHED THEN
           UPDATE 
              SET NAME = #{name}
                , PROVIDER = #{provider}
         WHEN NOT MATCHED THEN
           INSERT 
                ( EMAIL
                , NAME
                , PASSWORD
                , SALT
                , LOGIN_FAIL_COUNT
                , ROLE
                , PROVIDER)
            VALUES
                ( #{email}
                , #{name}
                , #{password}
                , #{salt}
                , 0
                , #{role}
                , #{provider})
	</update>
</mapper>