spring:
  profiles:
    active: dev
  application:
    name: mate
  security:
    oauth2:
      client:
        registration:
          naver: #naver OAuth 설정 값
            # application 인증
            client-id: 4pPemxO03hbvGh1soolD
            client-secret: da_wAem6Xs
            # user 인증 후처리 파트 (naver 로그인 콜백 URL)
            # naver 인증 후 인증 정보를 아래 URL로 돌려준다.
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            # naver application 인증 방식 설정
            authorization-grant-type: authorization_code
            # 사용자의 정보를 받아오는 범위 설정 (naver 사용자의 이름과 이메일을 전달 받는다.)
            scope: name, email
            # OAuth 서버 제공자를 식별할 수 있는 이름
            client-name: naver
        provider:
          naver: # naver OAuth 인증 토큰 발급 및 검증.
            # 사용자가 인증을 할 URL 설정
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # 네이버 사용자의 개인정보에 접근할 수 있는 OAuth Token을 발급받을 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            # 발급받은 Token을 이용해서 naver 사용자의 개인정보를 취득할 수 있는
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # scope 정보가 들어있는 키의 이름( reponse.name, response.email 로 접근 해야함.)
            user-name-attribute: response

  datasource:
    url: jdbc:oracle:thin:@ec2-15-165-9-38.ap-northeast-2.compute.amazonaws.com:1521:XE
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: MATE
    password: 1234
  # favicon 아이콘 맵핑
  web:
    resources:
      add-mappings: true
  # SMTP 서버 설정(gmail)
  mail:
    host: smtp.gmail.com
    port: 587
    username: p.rainmakerm@gmail.com
    password: "jlrpwxhmvsikmjyw"
    properties:
      "mail.smtp.auth": true
      "mail.smtp.starttls.enable": true
      "mail.smtp.starttls.required": true

  servlet:
    multipart:
      # 애플리케이션이 받을 수 있는 최대 업로드 용량에 대한 설정(100MB)
      max-file-size: 104857600
      # 한 사용자가 업로드 할 수 있는 최대 업로드 용량에 대한 설정(10MB)
      max-request-size: 10485760
app:
  security:
    permit-all-urls: /api/user/login,
      /api/v1/usertour/list,
      /api/v1/usertour/count,
      /api/v1/usertour/view/**,
      /api/v1/guidetour/**,
      /api/v1/tour/**,
      /api/v1/tour/regions,
      /api/v1/tour/countries/**,
      /api/v1/tour/cities/**,
  jwt:
    issuer: hello-spring-security
    secret-key: spring-security-secret-key-random-token-key
  multipart:
    base-dir: C:\matepic
    obfuscation:
      enable: true
      hide-ext:
        enable: false
  interceptors:
    add-access-log:
      path-patterns: /**
      exclude-path-patterns: /js/**,
        /css/**,
        /image/**

# 아래는 포트원 API키와 시크릿 키인데 절대 공개되면 안된다.
portone:
  api:
    key: 8408511610228667
    secret: fWQcZ0aEmO4NgPxu2cs8gNe8ODxM9YHf0A7FwlkxmtlMa6rvaXQ5RrBBqcQvfMOmUv0EsxfzTMYNF5Ts

mybatis:
  # mybatis-config.xml 파일의 위치를 지정
  config-location: classpath:mybatis/mybatis-config.xml
  # classpath -> target 폴더의 classes 폴더
  mapper-locations: classpath:com/mate/**/dao/mapper/*Mapper.xml

#server:
#  port: 8081

---
spring:
  config:
    activate:
      on-profile: prod

# prod profile 전용 설정
app:
  multipart:
    base-dir: /usr/local/src/tomcat/apache-tomcat-10.1.31/uploadfiles
    obfuscation:
      enable: true
      hide-ext:
        enable: false
